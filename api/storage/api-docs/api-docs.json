{
    "openapi": "3.0.0",
    "info": {
        "title": "ProsOnWork",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "local server"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Current user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "$ref": "bearerAuth"
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "$ref": "bearerAuth"
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "operationId": "listCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a specific category",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a list of products",
                "operationId": "listProducts",
                "parameters": [
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude of the location for filtering products",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude of the location for filtering products",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for filtering products",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Rating filter, can accept multiple values",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Filter by categories, can accept multiple values",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "minPrice",
                        "in": "query",
                        "description": "Minimum price for filtering products",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "maxPrice",
                        "in": "query",
                        "description": "Maximum price for filtering products",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a specific product",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "securePass123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "isClient"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "securePass123"
                    },
                    "isClient": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "StoreCategoryRequest": {},
            "StoreProductRequest": {},
            "UpdateCategoryRequest": {
                "description": "Request body for updating an existing category"
            },
            "UpdateProductRequest": {},
            "CategoryCollection": {
                "description": "A collection of category resources",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryResource"
                        }
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "description": "Represents a category",
                "required": [
                    "id",
                    "name",
                    "icon",
                    "image"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/MediaResource"
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "LoginResource": {
                "properties": {
                    "access_token": {
                        "description": "The access token for the logged-in user",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object"
            },
            "MediaResource": {
                "description": "Represents a media file",
                "required": [
                    "id",
                    "filename",
                    "filePath"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "filename": {
                        "type": "string",
                        "example": "image.png"
                    },
                    "filePath": {
                        "type": "string",
                        "example": "/storage/media/image.png"
                    },
                    "fileType": {
                        "type": "string",
                        "example": "image/png"
                    },
                    "size": {
                        "type": "integer",
                        "example": 204800
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "required": [
                    "id",
                    "serviceProvider",
                    "category",
                    "name",
                    "description",
                    "address",
                    "border",
                    "isActive",
                    "price",
                    "priceType",
                    "type",
                    "includes",
                    "faq",
                    "images",
                    "videos"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "serviceProvider": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    },
                    "name": {
                        "type": "string",
                        "example": "Web Development Service"
                    },
                    "description": {
                        "type": "string",
                        "example": "Custom website development for businesses."
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "border": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "example": 49.99
                    },
                    "priceType": {
                        "$ref": "#/components/schemas/PriceTypeEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProductTypeEnum"
                    },
                    "includes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Hosting",
                            "Domain"
                        ]
                    },
                    "faq": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FaqResource"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    },
                    "videos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    }
                },
                "type": "object"
            },
            "FaqResource": {
                "properties": {
                    "question": {
                        "type": "string",
                        "example": "Do you provide support?"
                    },
                    "answer": {
                        "type": "string",
                        "example": "Yes, we provide 24/7 support."
                    }
                },
                "type": "object"
            },
            "PriceTypeEnum": {
                "description": "different pricing types",
                "type": "string",
                "enum": [
                    "HOUR",
                    "PACKAGE"
                ],
                "example": "HOUR"
            },
            "ProductTypeEnum": {
                "description": "different product types",
                "type": "string",
                "enum": [
                    "SERVICE",
                    "EQUIPMENT"
                ],
                "example": "SERVICE"
            },
            "UserResource": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "role",
                    "address"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRoleEnum"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserRoleEnum": {
                "description": "Possible roles for a user",
                "type": "string",
                "enum": [
                    "CLIENT",
                    "SERVICE_PROVIDER",
                    "ADMIN"
                ]
            },
            "Address": {
                "required": [
                    "longitude",
                    "latitude"
                ],
                "properties": {
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ]
}